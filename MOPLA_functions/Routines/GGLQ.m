function r = GGLQ(sub, x, a, b, c, d, Alp, Bet, ww, C)
% GGLQ.m
% Global Gauss-Legendre Quadrature
%

% Input:  sub,          4 subscripts of the 4th order tensor T, 1*4 matrix;
%         x,            3 semi-axes of an inclusion, 3*1 matrix;
%         a,b,          the integrating range of theta; 
%         c,d,          the integrating range of phi;
%         Alp, Bet, ww, nodes and weights generated by GaussGGLQ(m)
%         C,            stiffness of the matrix 1*81 matrix;

% Output: r is a scalar.
%--------------------------------------------------------------------------
  ww = reshape(ww,1,[]);
  x  = x';
  Alp = reshape(Alp,1,[]);
  Bet = reshape(Bet,1,[]);
  k   = partTGL(sub(1),sub(2),sub(3),sub(4),ww,Alp,Bet,C,x);
  r   = 0.25*(d-c)*(b-a)*k;
% final results using Gauss-Legendre quadrature   
  r   = x(1)*x(2)*x(3)/(4*pi)*r;
end

